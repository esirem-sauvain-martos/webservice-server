/* soapStub.h
   Generated by gSOAP 2.8.98 for networkManagement.hpp

gSOAP XML Web services tools
Copyright (C) 2000-2020, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include <string>

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"
#if GSOAP_VERSION != 20898
# error "GSOAP VERSION 20898 MISMATCH IN GENERATED CODE VERSUS LIBRARY CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes, Structs and Unions                                                *
 *                                                                            *
\******************************************************************************/

struct ns__get_cpu_infoResponse;	/* networkManagement.hpp:4 */
struct ns__get_cpu_info;	/* networkManagement.hpp:4 */
struct ns__get_cpu_usageResponse;	/* networkManagement.hpp:5 */
struct ns__get_cpu_usage;	/* networkManagement.hpp:5 */
struct ns__get_memory_infoResponse;	/* networkManagement.hpp:8 */
struct ns__get_memory_info;	/* networkManagement.hpp:8 */
struct ns__get_memory_availableResponse;	/* networkManagement.hpp:9 */
struct ns__get_memory_available;	/* networkManagement.hpp:9 */
struct ns__get_memory_freeResponse;	/* networkManagement.hpp:10 */
struct ns__get_memory_free;	/* networkManagement.hpp:10 */
struct ns__get_drive_numberResponse;	/* networkManagement.hpp:13 */
struct ns__get_drive_number;	/* networkManagement.hpp:13 */
struct ns__get_drive_namesResponse;	/* networkManagement.hpp:14 */
struct ns__get_drive_names;	/* networkManagement.hpp:14 */
struct ns__get_drive_infoResponse;	/* networkManagement.hpp:15 */
struct ns__get_drive_info;	/* networkManagement.hpp:15 */
struct ns__get_drive_total_capacityResponse;	/* networkManagement.hpp:16 */
struct ns__get_drive_total_capacity;	/* networkManagement.hpp:16 */
struct ns__get_drive_used_capatityResponse;	/* networkManagement.hpp:17 */
struct ns__get_drive_used_capatity;	/* networkManagement.hpp:17 */
struct ns__get_interface_numberResponse;	/* networkManagement.hpp:20 */
struct ns__get_interface_number;	/* networkManagement.hpp:20 */
struct ns__get_interface_namesResponse;	/* networkManagement.hpp:21 */
struct ns__get_interface_names;	/* networkManagement.hpp:21 */
struct ns__get_interface_infoResponse;	/* networkManagement.hpp:22 */
struct ns__get_interface_info;	/* networkManagement.hpp:22 */
struct ns__get_interface_ip_addressResponse;	/* networkManagement.hpp:23 */
struct ns__get_interface_ip_address;	/* networkManagement.hpp:23 */
struct ns__get_interface_speedResponse;	/* networkManagement.hpp:24 */
struct ns__get_interface_speed;	/* networkManagement.hpp:24 */
struct ns__set_hostname;	/* networkManagement.hpp:27 */
struct ns__set_interface_ip_address;	/* networkManagement.hpp:28 */

/* networkManagement.hpp:4 */
#ifndef SOAP_TYPE_ns__get_cpu_infoResponse
#define SOAP_TYPE_ns__get_cpu_infoResponse (10)
/* complex XML schema type 'ns:get-cpu-infoResponse': */
struct SOAP_CMAC ns__get_cpu_infoResponse {
      public:
        /** Required element 'info' of XML schema type 'xsd:string' */
        std::string info;
      public:
        /** Return unique type id SOAP_TYPE_ns__get_cpu_infoResponse */
        long soap_type() const { return SOAP_TYPE_ns__get_cpu_infoResponse; }
        /** Constructor with member initializations */
        ns__get_cpu_infoResponse() : info() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns__get_cpu_infoResponse * SOAP_FMAC2 soap_instantiate_ns__get_cpu_infoResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* networkManagement.hpp:4 */
#ifndef SOAP_TYPE_ns__get_cpu_info
#define SOAP_TYPE_ns__get_cpu_info (11)
/* complex XML schema type 'ns:get-cpu-info': */
struct SOAP_CMAC ns__get_cpu_info {
      public:
        /** Return unique type id SOAP_TYPE_ns__get_cpu_info */
        long soap_type() const { return SOAP_TYPE_ns__get_cpu_info; }
        /** Constructor with member initializations */
        ns__get_cpu_info() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns__get_cpu_info * SOAP_FMAC2 soap_instantiate_ns__get_cpu_info(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* networkManagement.hpp:5 */
#ifndef SOAP_TYPE_ns__get_cpu_usageResponse
#define SOAP_TYPE_ns__get_cpu_usageResponse (15)
/* complex XML schema type 'ns:get-cpu-usageResponse': */
struct SOAP_CMAC ns__get_cpu_usageResponse {
      public:
        /** Required element 'usage' of XML schema type 'xsd:float' */
        float usage;
      public:
        /** Return unique type id SOAP_TYPE_ns__get_cpu_usageResponse */
        long soap_type() const { return SOAP_TYPE_ns__get_cpu_usageResponse; }
        /** Constructor with member initializations */
        ns__get_cpu_usageResponse() : usage() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns__get_cpu_usageResponse * SOAP_FMAC2 soap_instantiate_ns__get_cpu_usageResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* networkManagement.hpp:5 */
#ifndef SOAP_TYPE_ns__get_cpu_usage
#define SOAP_TYPE_ns__get_cpu_usage (16)
/* complex XML schema type 'ns:get-cpu-usage': */
struct SOAP_CMAC ns__get_cpu_usage {
      public:
        /** Return unique type id SOAP_TYPE_ns__get_cpu_usage */
        long soap_type() const { return SOAP_TYPE_ns__get_cpu_usage; }
        /** Constructor with member initializations */
        ns__get_cpu_usage() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns__get_cpu_usage * SOAP_FMAC2 soap_instantiate_ns__get_cpu_usage(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* networkManagement.hpp:8 */
#ifndef SOAP_TYPE_ns__get_memory_infoResponse
#define SOAP_TYPE_ns__get_memory_infoResponse (18)
/* complex XML schema type 'ns:get-memory-infoResponse': */
struct SOAP_CMAC ns__get_memory_infoResponse {
      public:
        /** Required element 'info' of XML schema type 'xsd:string' */
        std::string info;
      public:
        /** Return unique type id SOAP_TYPE_ns__get_memory_infoResponse */
        long soap_type() const { return SOAP_TYPE_ns__get_memory_infoResponse; }
        /** Constructor with member initializations */
        ns__get_memory_infoResponse() : info() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns__get_memory_infoResponse * SOAP_FMAC2 soap_instantiate_ns__get_memory_infoResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* networkManagement.hpp:8 */
#ifndef SOAP_TYPE_ns__get_memory_info
#define SOAP_TYPE_ns__get_memory_info (19)
/* complex XML schema type 'ns:get-memory-info': */
struct SOAP_CMAC ns__get_memory_info {
      public:
        /** Return unique type id SOAP_TYPE_ns__get_memory_info */
        long soap_type() const { return SOAP_TYPE_ns__get_memory_info; }
        /** Constructor with member initializations */
        ns__get_memory_info() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns__get_memory_info * SOAP_FMAC2 soap_instantiate_ns__get_memory_info(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* networkManagement.hpp:9 */
#ifndef SOAP_TYPE_ns__get_memory_availableResponse
#define SOAP_TYPE_ns__get_memory_availableResponse (21)
/* complex XML schema type 'ns:get-memory-availableResponse': */
struct SOAP_CMAC ns__get_memory_availableResponse {
      public:
        /** Required element 'available' of XML schema type 'xsd:float' */
        float available;
      public:
        /** Return unique type id SOAP_TYPE_ns__get_memory_availableResponse */
        long soap_type() const { return SOAP_TYPE_ns__get_memory_availableResponse; }
        /** Constructor with member initializations */
        ns__get_memory_availableResponse() : available() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns__get_memory_availableResponse * SOAP_FMAC2 soap_instantiate_ns__get_memory_availableResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* networkManagement.hpp:9 */
#ifndef SOAP_TYPE_ns__get_memory_available
#define SOAP_TYPE_ns__get_memory_available (22)
/* complex XML schema type 'ns:get-memory-available': */
struct SOAP_CMAC ns__get_memory_available {
      public:
        /** Return unique type id SOAP_TYPE_ns__get_memory_available */
        long soap_type() const { return SOAP_TYPE_ns__get_memory_available; }
        /** Constructor with member initializations */
        ns__get_memory_available() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns__get_memory_available * SOAP_FMAC2 soap_instantiate_ns__get_memory_available(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* networkManagement.hpp:10 */
#ifndef SOAP_TYPE_ns__get_memory_freeResponse
#define SOAP_TYPE_ns__get_memory_freeResponse (24)
/* complex XML schema type 'ns:get-memory-freeResponse': */
struct SOAP_CMAC ns__get_memory_freeResponse {
      public:
        /** Required element 'free' of XML schema type 'xsd:float' */
        float free;
      public:
        /** Return unique type id SOAP_TYPE_ns__get_memory_freeResponse */
        long soap_type() const { return SOAP_TYPE_ns__get_memory_freeResponse; }
        /** Constructor with member initializations */
        ns__get_memory_freeResponse() : free() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns__get_memory_freeResponse * SOAP_FMAC2 soap_instantiate_ns__get_memory_freeResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* networkManagement.hpp:10 */
#ifndef SOAP_TYPE_ns__get_memory_free
#define SOAP_TYPE_ns__get_memory_free (25)
/* complex XML schema type 'ns:get-memory-free': */
struct SOAP_CMAC ns__get_memory_free {
      public:
        /** Return unique type id SOAP_TYPE_ns__get_memory_free */
        long soap_type() const { return SOAP_TYPE_ns__get_memory_free; }
        /** Constructor with member initializations */
        ns__get_memory_free() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns__get_memory_free * SOAP_FMAC2 soap_instantiate_ns__get_memory_free(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* networkManagement.hpp:13 */
#ifndef SOAP_TYPE_ns__get_drive_numberResponse
#define SOAP_TYPE_ns__get_drive_numberResponse (29)
/* complex XML schema type 'ns:get-drive-numberResponse': */
struct SOAP_CMAC ns__get_drive_numberResponse {
      public:
        /** Required element 'number' of XML schema type 'xsd:unsignedInt' */
        unsigned int number;
      public:
        /** Return unique type id SOAP_TYPE_ns__get_drive_numberResponse */
        long soap_type() const { return SOAP_TYPE_ns__get_drive_numberResponse; }
        /** Constructor with member initializations */
        ns__get_drive_numberResponse() : number() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns__get_drive_numberResponse * SOAP_FMAC2 soap_instantiate_ns__get_drive_numberResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* networkManagement.hpp:13 */
#ifndef SOAP_TYPE_ns__get_drive_number
#define SOAP_TYPE_ns__get_drive_number (30)
/* complex XML schema type 'ns:get-drive-number': */
struct SOAP_CMAC ns__get_drive_number {
      public:
        /** Return unique type id SOAP_TYPE_ns__get_drive_number */
        long soap_type() const { return SOAP_TYPE_ns__get_drive_number; }
        /** Constructor with member initializations */
        ns__get_drive_number() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns__get_drive_number * SOAP_FMAC2 soap_instantiate_ns__get_drive_number(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* networkManagement.hpp:14 */
#ifndef SOAP_TYPE_ns__get_drive_namesResponse
#define SOAP_TYPE_ns__get_drive_namesResponse (33)
/* complex XML schema type 'ns:get-drive-namesResponse': */
struct SOAP_CMAC ns__get_drive_namesResponse {
      public:
        /** Optional element 'names' of XML schema type 'xsd:string' */
        std::string *names;
      public:
        /** Return unique type id SOAP_TYPE_ns__get_drive_namesResponse */
        long soap_type() const { return SOAP_TYPE_ns__get_drive_namesResponse; }
        /** Constructor with member initializations */
        ns__get_drive_namesResponse() : names() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns__get_drive_namesResponse * SOAP_FMAC2 soap_instantiate_ns__get_drive_namesResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* networkManagement.hpp:14 */
#ifndef SOAP_TYPE_ns__get_drive_names
#define SOAP_TYPE_ns__get_drive_names (34)
/* complex XML schema type 'ns:get-drive-names': */
struct SOAP_CMAC ns__get_drive_names {
      public:
        /** Return unique type id SOAP_TYPE_ns__get_drive_names */
        long soap_type() const { return SOAP_TYPE_ns__get_drive_names; }
        /** Constructor with member initializations */
        ns__get_drive_names() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns__get_drive_names * SOAP_FMAC2 soap_instantiate_ns__get_drive_names(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* networkManagement.hpp:15 */
#ifndef SOAP_TYPE_ns__get_drive_infoResponse
#define SOAP_TYPE_ns__get_drive_infoResponse (36)
/* complex XML schema type 'ns:get-drive-infoResponse': */
struct SOAP_CMAC ns__get_drive_infoResponse {
      public:
        /** Required element 'info' of XML schema type 'xsd:string' */
        std::string info;
      public:
        /** Return unique type id SOAP_TYPE_ns__get_drive_infoResponse */
        long soap_type() const { return SOAP_TYPE_ns__get_drive_infoResponse; }
        /** Constructor with member initializations */
        ns__get_drive_infoResponse() : info() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns__get_drive_infoResponse * SOAP_FMAC2 soap_instantiate_ns__get_drive_infoResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* networkManagement.hpp:15 */
#ifndef SOAP_TYPE_ns__get_drive_info
#define SOAP_TYPE_ns__get_drive_info (37)
/* complex XML schema type 'ns:get-drive-info': */
struct SOAP_CMAC ns__get_drive_info {
      public:
        /** Required element 'name' of XML schema type 'xsd:string' */
        std::string name;
      public:
        /** Return unique type id SOAP_TYPE_ns__get_drive_info */
        long soap_type() const { return SOAP_TYPE_ns__get_drive_info; }
        /** Constructor with member initializations */
        ns__get_drive_info() : name() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns__get_drive_info * SOAP_FMAC2 soap_instantiate_ns__get_drive_info(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* networkManagement.hpp:16 */
#ifndef SOAP_TYPE_ns__get_drive_total_capacityResponse
#define SOAP_TYPE_ns__get_drive_total_capacityResponse (39)
/* complex XML schema type 'ns:get-drive-total-capacityResponse': */
struct SOAP_CMAC ns__get_drive_total_capacityResponse {
      public:
        /** Required element 'total' of XML schema type 'xsd:float' */
        float total;
      public:
        /** Return unique type id SOAP_TYPE_ns__get_drive_total_capacityResponse */
        long soap_type() const { return SOAP_TYPE_ns__get_drive_total_capacityResponse; }
        /** Constructor with member initializations */
        ns__get_drive_total_capacityResponse() : total() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns__get_drive_total_capacityResponse * SOAP_FMAC2 soap_instantiate_ns__get_drive_total_capacityResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* networkManagement.hpp:16 */
#ifndef SOAP_TYPE_ns__get_drive_total_capacity
#define SOAP_TYPE_ns__get_drive_total_capacity (40)
/* complex XML schema type 'ns:get-drive-total-capacity': */
struct SOAP_CMAC ns__get_drive_total_capacity {
      public:
        /** Required element 'name' of XML schema type 'xsd:string' */
        std::string name;
      public:
        /** Return unique type id SOAP_TYPE_ns__get_drive_total_capacity */
        long soap_type() const { return SOAP_TYPE_ns__get_drive_total_capacity; }
        /** Constructor with member initializations */
        ns__get_drive_total_capacity() : name() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns__get_drive_total_capacity * SOAP_FMAC2 soap_instantiate_ns__get_drive_total_capacity(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* networkManagement.hpp:17 */
#ifndef SOAP_TYPE_ns__get_drive_used_capatityResponse
#define SOAP_TYPE_ns__get_drive_used_capatityResponse (42)
/* complex XML schema type 'ns:get-drive-used-capatityResponse': */
struct SOAP_CMAC ns__get_drive_used_capatityResponse {
      public:
        /** Required element 'usage' of XML schema type 'xsd:float' */
        float usage;
      public:
        /** Return unique type id SOAP_TYPE_ns__get_drive_used_capatityResponse */
        long soap_type() const { return SOAP_TYPE_ns__get_drive_used_capatityResponse; }
        /** Constructor with member initializations */
        ns__get_drive_used_capatityResponse() : usage() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns__get_drive_used_capatityResponse * SOAP_FMAC2 soap_instantiate_ns__get_drive_used_capatityResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* networkManagement.hpp:17 */
#ifndef SOAP_TYPE_ns__get_drive_used_capatity
#define SOAP_TYPE_ns__get_drive_used_capatity (43)
/* complex XML schema type 'ns:get-drive-used-capatity': */
struct SOAP_CMAC ns__get_drive_used_capatity {
      public:
        /** Required element 'name' of XML schema type 'xsd:string' */
        std::string name;
      public:
        /** Return unique type id SOAP_TYPE_ns__get_drive_used_capatity */
        long soap_type() const { return SOAP_TYPE_ns__get_drive_used_capatity; }
        /** Constructor with member initializations */
        ns__get_drive_used_capatity() : name() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns__get_drive_used_capatity * SOAP_FMAC2 soap_instantiate_ns__get_drive_used_capatity(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* networkManagement.hpp:20 */
#ifndef SOAP_TYPE_ns__get_interface_numberResponse
#define SOAP_TYPE_ns__get_interface_numberResponse (45)
/* complex XML schema type 'ns:get-interface-numberResponse': */
struct SOAP_CMAC ns__get_interface_numberResponse {
      public:
        /** Required element 'number' of XML schema type 'xsd:unsignedInt' */
        unsigned int number;
      public:
        /** Return unique type id SOAP_TYPE_ns__get_interface_numberResponse */
        long soap_type() const { return SOAP_TYPE_ns__get_interface_numberResponse; }
        /** Constructor with member initializations */
        ns__get_interface_numberResponse() : number() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns__get_interface_numberResponse * SOAP_FMAC2 soap_instantiate_ns__get_interface_numberResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* networkManagement.hpp:20 */
#ifndef SOAP_TYPE_ns__get_interface_number
#define SOAP_TYPE_ns__get_interface_number (46)
/* complex XML schema type 'ns:get-interface-number': */
struct SOAP_CMAC ns__get_interface_number {
      public:
        /** Return unique type id SOAP_TYPE_ns__get_interface_number */
        long soap_type() const { return SOAP_TYPE_ns__get_interface_number; }
        /** Constructor with member initializations */
        ns__get_interface_number() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns__get_interface_number * SOAP_FMAC2 soap_instantiate_ns__get_interface_number(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* networkManagement.hpp:21 */
#ifndef SOAP_TYPE_ns__get_interface_namesResponse
#define SOAP_TYPE_ns__get_interface_namesResponse (48)
/* complex XML schema type 'ns:get-interface-namesResponse': */
struct SOAP_CMAC ns__get_interface_namesResponse {
      public:
        /** Optional element 'names' of XML schema type 'xsd:string' */
        std::string *names;
      public:
        /** Return unique type id SOAP_TYPE_ns__get_interface_namesResponse */
        long soap_type() const { return SOAP_TYPE_ns__get_interface_namesResponse; }
        /** Constructor with member initializations */
        ns__get_interface_namesResponse() : names() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns__get_interface_namesResponse * SOAP_FMAC2 soap_instantiate_ns__get_interface_namesResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* networkManagement.hpp:21 */
#ifndef SOAP_TYPE_ns__get_interface_names
#define SOAP_TYPE_ns__get_interface_names (49)
/* complex XML schema type 'ns:get-interface-names': */
struct SOAP_CMAC ns__get_interface_names {
      public:
        /** Return unique type id SOAP_TYPE_ns__get_interface_names */
        long soap_type() const { return SOAP_TYPE_ns__get_interface_names; }
        /** Constructor with member initializations */
        ns__get_interface_names() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns__get_interface_names * SOAP_FMAC2 soap_instantiate_ns__get_interface_names(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* networkManagement.hpp:22 */
#ifndef SOAP_TYPE_ns__get_interface_infoResponse
#define SOAP_TYPE_ns__get_interface_infoResponse (51)
/* complex XML schema type 'ns:get-interface-infoResponse': */
struct SOAP_CMAC ns__get_interface_infoResponse {
      public:
        /** Required element 'info' of XML schema type 'xsd:string' */
        std::string info;
      public:
        /** Return unique type id SOAP_TYPE_ns__get_interface_infoResponse */
        long soap_type() const { return SOAP_TYPE_ns__get_interface_infoResponse; }
        /** Constructor with member initializations */
        ns__get_interface_infoResponse() : info() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns__get_interface_infoResponse * SOAP_FMAC2 soap_instantiate_ns__get_interface_infoResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* networkManagement.hpp:22 */
#ifndef SOAP_TYPE_ns__get_interface_info
#define SOAP_TYPE_ns__get_interface_info (52)
/* complex XML schema type 'ns:get-interface-info': */
struct SOAP_CMAC ns__get_interface_info {
      public:
        /** Required element 'name' of XML schema type 'xsd:string' */
        std::string name;
      public:
        /** Return unique type id SOAP_TYPE_ns__get_interface_info */
        long soap_type() const { return SOAP_TYPE_ns__get_interface_info; }
        /** Constructor with member initializations */
        ns__get_interface_info() : name() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns__get_interface_info * SOAP_FMAC2 soap_instantiate_ns__get_interface_info(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* networkManagement.hpp:23 */
#ifndef SOAP_TYPE_ns__get_interface_ip_addressResponse
#define SOAP_TYPE_ns__get_interface_ip_addressResponse (54)
/* complex XML schema type 'ns:get-interface-ip-addressResponse': */
struct SOAP_CMAC ns__get_interface_ip_addressResponse {
      public:
        /** Required element 'ip-address' of XML schema type 'xsd:string' */
        std::string ip_address;
      public:
        /** Return unique type id SOAP_TYPE_ns__get_interface_ip_addressResponse */
        long soap_type() const { return SOAP_TYPE_ns__get_interface_ip_addressResponse; }
        /** Constructor with member initializations */
        ns__get_interface_ip_addressResponse() : ip_address() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns__get_interface_ip_addressResponse * SOAP_FMAC2 soap_instantiate_ns__get_interface_ip_addressResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* networkManagement.hpp:23 */
#ifndef SOAP_TYPE_ns__get_interface_ip_address
#define SOAP_TYPE_ns__get_interface_ip_address (55)
/* complex XML schema type 'ns:get-interface-ip-address': */
struct SOAP_CMAC ns__get_interface_ip_address {
      public:
        /** Required element 'name' of XML schema type 'xsd:string' */
        std::string name;
      public:
        /** Return unique type id SOAP_TYPE_ns__get_interface_ip_address */
        long soap_type() const { return SOAP_TYPE_ns__get_interface_ip_address; }
        /** Constructor with member initializations */
        ns__get_interface_ip_address() : name() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns__get_interface_ip_address * SOAP_FMAC2 soap_instantiate_ns__get_interface_ip_address(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* networkManagement.hpp:24 */
#ifndef SOAP_TYPE_ns__get_interface_speedResponse
#define SOAP_TYPE_ns__get_interface_speedResponse (58)
/* complex XML schema type 'ns:get-interface-speedResponse': */
struct SOAP_CMAC ns__get_interface_speedResponse {
      public:
        /** Required element 'speed' of XML schema type 'xsd:int' */
        int speed;
      public:
        /** Return unique type id SOAP_TYPE_ns__get_interface_speedResponse */
        long soap_type() const { return SOAP_TYPE_ns__get_interface_speedResponse; }
        /** Constructor with member initializations */
        ns__get_interface_speedResponse() : speed() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns__get_interface_speedResponse * SOAP_FMAC2 soap_instantiate_ns__get_interface_speedResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* networkManagement.hpp:24 */
#ifndef SOAP_TYPE_ns__get_interface_speed
#define SOAP_TYPE_ns__get_interface_speed (59)
/* complex XML schema type 'ns:get-interface-speed': */
struct SOAP_CMAC ns__get_interface_speed {
      public:
        /** Required element 'name' of XML schema type 'xsd:string' */
        std::string name;
      public:
        /** Return unique type id SOAP_TYPE_ns__get_interface_speed */
        long soap_type() const { return SOAP_TYPE_ns__get_interface_speed; }
        /** Constructor with member initializations */
        ns__get_interface_speed() : name() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns__get_interface_speed * SOAP_FMAC2 soap_instantiate_ns__get_interface_speed(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* networkManagement.hpp:27 */
#ifndef SOAP_TYPE_ns__set_hostname
#define SOAP_TYPE_ns__set_hostname (62)
/* complex XML schema type 'ns:set-hostname': */
struct SOAP_CMAC ns__set_hostname {
      public:
        /** Required element 'hostname' of XML schema type 'xsd:string' */
        std::string hostname;
      public:
        /** Return unique type id SOAP_TYPE_ns__set_hostname */
        long soap_type() const { return SOAP_TYPE_ns__set_hostname; }
        /** Constructor with member initializations */
        ns__set_hostname() : hostname() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns__set_hostname * SOAP_FMAC2 soap_instantiate_ns__set_hostname(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* networkManagement.hpp:28 */
#ifndef SOAP_TYPE_ns__set_interface_ip_address
#define SOAP_TYPE_ns__set_interface_ip_address (64)
/* complex XML schema type 'ns:set-interface-ip-address': */
struct SOAP_CMAC ns__set_interface_ip_address {
      public:
        /** Required element 'name' of XML schema type 'xsd:string' */
        std::string name;
        /** Required element 'ip-address' of XML schema type 'xsd:string' */
        std::string ip_address;
        /** Required element 'subnet-mask' of XML schema type 'xsd:string' */
        std::string subnet_mask;
      public:
        /** Return unique type id SOAP_TYPE_ns__set_interface_ip_address */
        long soap_type() const { return SOAP_TYPE_ns__set_interface_ip_address; }
        /** Constructor with member initializations */
        ns__set_interface_ip_address() : name(), ip_address(), subnet_mask() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns__set_interface_ip_address * SOAP_FMAC2 soap_instantiate_ns__set_interface_ip_address(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* networkManagement.hpp:29 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (65)
/* SOAP_ENV__Header: */
struct SOAP_CMAC SOAP_ENV__Header {
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Header */
        long soap_type() const { return SOAP_TYPE_SOAP_ENV__Header; }
        /** Constructor with member initializations */
        SOAP_ENV__Header() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* networkManagement.hpp:29 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (66)
/* Type SOAP_ENV__Code is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* SOAP_ENV__Code: */
struct SOAP_CMAC SOAP_ENV__Code {
      public:
        /** Optional element 'SOAP-ENV:Value' of XML schema type 'xsd:QName' */
        char *SOAP_ENV__Value;
        /** Optional element 'SOAP-ENV:Subcode' of XML schema type 'SOAP-ENV:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Subcode;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Code */
        long soap_type() const { return SOAP_TYPE_SOAP_ENV__Code; }
        /** Constructor with member initializations */
        SOAP_ENV__Code() : SOAP_ENV__Value(), SOAP_ENV__Subcode() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* networkManagement.hpp:29 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (68)
/* SOAP_ENV__Detail: */
struct SOAP_CMAC SOAP_ENV__Detail {
      public:
        char *__any;
        /** Any type of element 'fault' assigned to fault with its SOAP_TYPE_<typename> assigned to __type */
        /** Do not create a cyclic data structure through this member unless SOAP encoding or SOAP_XML_GRAPH are used for id-ref serialization */
        int __type;
        void *fault;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Detail */
        long soap_type() const { return SOAP_TYPE_SOAP_ENV__Detail; }
        /** Constructor with member initializations */
        SOAP_ENV__Detail() : __any(), __type(), fault() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* networkManagement.hpp:29 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (70)
/* SOAP_ENV__Reason: */
struct SOAP_CMAC SOAP_ENV__Reason {
      public:
        /** Optional element 'SOAP-ENV:Text' of XML schema type 'xsd:string' */
        char *SOAP_ENV__Text;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Reason */
        long soap_type() const { return SOAP_TYPE_SOAP_ENV__Reason; }
        /** Constructor with member initializations */
        SOAP_ENV__Reason() : SOAP_ENV__Text() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* networkManagement.hpp:29 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (71)
/* SOAP_ENV__Fault: */
struct SOAP_CMAC SOAP_ENV__Fault {
      public:
        /** Optional element 'faultcode' of XML schema type 'xsd:QName' */
        char *faultcode;
        /** Optional element 'faultstring' of XML schema type 'xsd:string' */
        char *faultstring;
        /** Optional element 'faultactor' of XML schema type 'xsd:string' */
        char *faultactor;
        /** Optional element 'detail' of XML schema type 'SOAP-ENV:Detail' */
        struct SOAP_ENV__Detail *detail;
        /** Optional element 'SOAP-ENV:Code' of XML schema type 'SOAP-ENV:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Code;
        /** Optional element 'SOAP-ENV:Reason' of XML schema type 'SOAP-ENV:Reason' */
        struct SOAP_ENV__Reason *SOAP_ENV__Reason;
        /** Optional element 'SOAP-ENV:Node' of XML schema type 'xsd:string' */
        char *SOAP_ENV__Node;
        /** Optional element 'SOAP-ENV:Role' of XML schema type 'xsd:string' */
        char *SOAP_ENV__Role;
        /** Optional element 'SOAP-ENV:Detail' of XML schema type 'SOAP-ENV:Detail' */
        struct SOAP_ENV__Detail *SOAP_ENV__Detail;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Fault */
        long soap_type() const { return SOAP_TYPE_SOAP_ENV__Fault; }
        /** Constructor with member initializations */
        SOAP_ENV__Fault() : faultcode(), faultstring(), faultactor(), detail(), SOAP_ENV__Code(), SOAP_ENV__Reason(), SOAP_ENV__Node(), SOAP_ENV__Role(), SOAP_ENV__Detail() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/


/* (built-in):0 */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (5)
typedef char *_XML;
#endif

/* (built-in):0 */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (6)
typedef char *_QName;
#endif

/******************************************************************************\
 *                                                                            *
 * Serializable Types                                                         *
 *                                                                            *
\******************************************************************************/


/* char has binding name 'byte' for type 'xsd:byte' */
#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif

/* int has binding name 'int' for type 'xsd:int' */
#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif

/* float has binding name 'float' for type 'xsd:float' */
#ifndef SOAP_TYPE_float
#define SOAP_TYPE_float (12)
#endif

/* unsigned int has binding name 'unsignedInt' for type 'xsd:unsignedInt' */
#ifndef SOAP_TYPE_unsignedInt
#define SOAP_TYPE_unsignedInt (26)
#endif

/* std::string has binding name 'std__string' for type 'xsd:string' */
#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (7)
#endif

/* struct SOAP_ENV__Fault has binding name 'SOAP_ENV__Fault' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (71)
#endif

/* struct SOAP_ENV__Reason has binding name 'SOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (70)
#endif

/* struct SOAP_ENV__Detail has binding name 'SOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (68)
#endif

/* struct SOAP_ENV__Code has binding name 'SOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (66)
#endif

/* struct SOAP_ENV__Header has binding name 'SOAP_ENV__Header' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (65)
#endif

/* struct ns__set_interface_ip_address has binding name 'ns__set_interface_ip_address' for type 'ns:set-interface-ip-address' */
#ifndef SOAP_TYPE_ns__set_interface_ip_address
#define SOAP_TYPE_ns__set_interface_ip_address (64)
#endif

/* struct ns__set_hostname has binding name 'ns__set_hostname' for type 'ns:set-hostname' */
#ifndef SOAP_TYPE_ns__set_hostname
#define SOAP_TYPE_ns__set_hostname (62)
#endif

/* struct ns__get_interface_speed has binding name 'ns__get_interface_speed' for type 'ns:get-interface-speed' */
#ifndef SOAP_TYPE_ns__get_interface_speed
#define SOAP_TYPE_ns__get_interface_speed (59)
#endif

/* struct ns__get_interface_speedResponse has binding name 'ns__get_interface_speedResponse' for type 'ns:get-interface-speedResponse' */
#ifndef SOAP_TYPE_ns__get_interface_speedResponse
#define SOAP_TYPE_ns__get_interface_speedResponse (58)
#endif

/* struct ns__get_interface_ip_address has binding name 'ns__get_interface_ip_address' for type 'ns:get-interface-ip-address' */
#ifndef SOAP_TYPE_ns__get_interface_ip_address
#define SOAP_TYPE_ns__get_interface_ip_address (55)
#endif

/* struct ns__get_interface_ip_addressResponse has binding name 'ns__get_interface_ip_addressResponse' for type 'ns:get-interface-ip-addressResponse' */
#ifndef SOAP_TYPE_ns__get_interface_ip_addressResponse
#define SOAP_TYPE_ns__get_interface_ip_addressResponse (54)
#endif

/* struct ns__get_interface_info has binding name 'ns__get_interface_info' for type 'ns:get-interface-info' */
#ifndef SOAP_TYPE_ns__get_interface_info
#define SOAP_TYPE_ns__get_interface_info (52)
#endif

/* struct ns__get_interface_infoResponse has binding name 'ns__get_interface_infoResponse' for type 'ns:get-interface-infoResponse' */
#ifndef SOAP_TYPE_ns__get_interface_infoResponse
#define SOAP_TYPE_ns__get_interface_infoResponse (51)
#endif

/* struct ns__get_interface_names has binding name 'ns__get_interface_names' for type 'ns:get-interface-names' */
#ifndef SOAP_TYPE_ns__get_interface_names
#define SOAP_TYPE_ns__get_interface_names (49)
#endif

/* struct ns__get_interface_namesResponse has binding name 'ns__get_interface_namesResponse' for type 'ns:get-interface-namesResponse' */
#ifndef SOAP_TYPE_ns__get_interface_namesResponse
#define SOAP_TYPE_ns__get_interface_namesResponse (48)
#endif

/* struct ns__get_interface_number has binding name 'ns__get_interface_number' for type 'ns:get-interface-number' */
#ifndef SOAP_TYPE_ns__get_interface_number
#define SOAP_TYPE_ns__get_interface_number (46)
#endif

/* struct ns__get_interface_numberResponse has binding name 'ns__get_interface_numberResponse' for type 'ns:get-interface-numberResponse' */
#ifndef SOAP_TYPE_ns__get_interface_numberResponse
#define SOAP_TYPE_ns__get_interface_numberResponse (45)
#endif

/* struct ns__get_drive_used_capatity has binding name 'ns__get_drive_used_capatity' for type 'ns:get-drive-used-capatity' */
#ifndef SOAP_TYPE_ns__get_drive_used_capatity
#define SOAP_TYPE_ns__get_drive_used_capatity (43)
#endif

/* struct ns__get_drive_used_capatityResponse has binding name 'ns__get_drive_used_capatityResponse' for type 'ns:get-drive-used-capatityResponse' */
#ifndef SOAP_TYPE_ns__get_drive_used_capatityResponse
#define SOAP_TYPE_ns__get_drive_used_capatityResponse (42)
#endif

/* struct ns__get_drive_total_capacity has binding name 'ns__get_drive_total_capacity' for type 'ns:get-drive-total-capacity' */
#ifndef SOAP_TYPE_ns__get_drive_total_capacity
#define SOAP_TYPE_ns__get_drive_total_capacity (40)
#endif

/* struct ns__get_drive_total_capacityResponse has binding name 'ns__get_drive_total_capacityResponse' for type 'ns:get-drive-total-capacityResponse' */
#ifndef SOAP_TYPE_ns__get_drive_total_capacityResponse
#define SOAP_TYPE_ns__get_drive_total_capacityResponse (39)
#endif

/* struct ns__get_drive_info has binding name 'ns__get_drive_info' for type 'ns:get-drive-info' */
#ifndef SOAP_TYPE_ns__get_drive_info
#define SOAP_TYPE_ns__get_drive_info (37)
#endif

/* struct ns__get_drive_infoResponse has binding name 'ns__get_drive_infoResponse' for type 'ns:get-drive-infoResponse' */
#ifndef SOAP_TYPE_ns__get_drive_infoResponse
#define SOAP_TYPE_ns__get_drive_infoResponse (36)
#endif

/* struct ns__get_drive_names has binding name 'ns__get_drive_names' for type 'ns:get-drive-names' */
#ifndef SOAP_TYPE_ns__get_drive_names
#define SOAP_TYPE_ns__get_drive_names (34)
#endif

/* struct ns__get_drive_namesResponse has binding name 'ns__get_drive_namesResponse' for type 'ns:get-drive-namesResponse' */
#ifndef SOAP_TYPE_ns__get_drive_namesResponse
#define SOAP_TYPE_ns__get_drive_namesResponse (33)
#endif

/* struct ns__get_drive_number has binding name 'ns__get_drive_number' for type 'ns:get-drive-number' */
#ifndef SOAP_TYPE_ns__get_drive_number
#define SOAP_TYPE_ns__get_drive_number (30)
#endif

/* struct ns__get_drive_numberResponse has binding name 'ns__get_drive_numberResponse' for type 'ns:get-drive-numberResponse' */
#ifndef SOAP_TYPE_ns__get_drive_numberResponse
#define SOAP_TYPE_ns__get_drive_numberResponse (29)
#endif

/* struct ns__get_memory_free has binding name 'ns__get_memory_free' for type 'ns:get-memory-free' */
#ifndef SOAP_TYPE_ns__get_memory_free
#define SOAP_TYPE_ns__get_memory_free (25)
#endif

/* struct ns__get_memory_freeResponse has binding name 'ns__get_memory_freeResponse' for type 'ns:get-memory-freeResponse' */
#ifndef SOAP_TYPE_ns__get_memory_freeResponse
#define SOAP_TYPE_ns__get_memory_freeResponse (24)
#endif

/* struct ns__get_memory_available has binding name 'ns__get_memory_available' for type 'ns:get-memory-available' */
#ifndef SOAP_TYPE_ns__get_memory_available
#define SOAP_TYPE_ns__get_memory_available (22)
#endif

/* struct ns__get_memory_availableResponse has binding name 'ns__get_memory_availableResponse' for type 'ns:get-memory-availableResponse' */
#ifndef SOAP_TYPE_ns__get_memory_availableResponse
#define SOAP_TYPE_ns__get_memory_availableResponse (21)
#endif

/* struct ns__get_memory_info has binding name 'ns__get_memory_info' for type 'ns:get-memory-info' */
#ifndef SOAP_TYPE_ns__get_memory_info
#define SOAP_TYPE_ns__get_memory_info (19)
#endif

/* struct ns__get_memory_infoResponse has binding name 'ns__get_memory_infoResponse' for type 'ns:get-memory-infoResponse' */
#ifndef SOAP_TYPE_ns__get_memory_infoResponse
#define SOAP_TYPE_ns__get_memory_infoResponse (18)
#endif

/* struct ns__get_cpu_usage has binding name 'ns__get_cpu_usage' for type 'ns:get-cpu-usage' */
#ifndef SOAP_TYPE_ns__get_cpu_usage
#define SOAP_TYPE_ns__get_cpu_usage (16)
#endif

/* struct ns__get_cpu_usageResponse has binding name 'ns__get_cpu_usageResponse' for type 'ns:get-cpu-usageResponse' */
#ifndef SOAP_TYPE_ns__get_cpu_usageResponse
#define SOAP_TYPE_ns__get_cpu_usageResponse (15)
#endif

/* struct ns__get_cpu_info has binding name 'ns__get_cpu_info' for type 'ns:get-cpu-info' */
#ifndef SOAP_TYPE_ns__get_cpu_info
#define SOAP_TYPE_ns__get_cpu_info (11)
#endif

/* struct ns__get_cpu_infoResponse has binding name 'ns__get_cpu_infoResponse' for type 'ns:get-cpu-infoResponse' */
#ifndef SOAP_TYPE_ns__get_cpu_infoResponse
#define SOAP_TYPE_ns__get_cpu_infoResponse (10)
#endif

/* struct SOAP_ENV__Reason * has binding name 'PointerToSOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (73)
#endif

/* struct SOAP_ENV__Detail * has binding name 'PointerToSOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (72)
#endif

/* struct SOAP_ENV__Code * has binding name 'PointerToSOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (67)
#endif

/* std::string * has binding name 'PointerTostd__string' for type 'xsd:string' */
#ifndef SOAP_TYPE_PointerTostd__string
#define SOAP_TYPE_PointerTostd__string (31)
#endif

/* _QName has binding name '_QName' for type 'xsd:QName' */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (6)
#endif

/* _XML has binding name '_XML' for type '' */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (5)
#endif

/* char * has binding name 'string' for type 'xsd:string' */
#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif

/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Client-Side Call Stub Functions                                            *
 *                                                                            *
\******************************************************************************/

    
    /** Web service synchronous operation 'soap_call_ns__get_cpu_info' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__get_cpu_info(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string &info);
    /** Web service asynchronous operation 'soap_send_ns__get_cpu_info' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns__get_cpu_info(struct soap *soap, const char *soap_endpoint, const char *soap_action);
    /** Web service asynchronous operation 'soap_recv_ns__get_cpu_info' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns__get_cpu_info(struct soap *soap, std::string &info);
    
    /** Web service synchronous operation 'soap_call_ns__get_cpu_usage' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__get_cpu_usage(struct soap *soap, const char *soap_endpoint, const char *soap_action, float &usage);
    /** Web service asynchronous operation 'soap_send_ns__get_cpu_usage' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns__get_cpu_usage(struct soap *soap, const char *soap_endpoint, const char *soap_action);
    /** Web service asynchronous operation 'soap_recv_ns__get_cpu_usage' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns__get_cpu_usage(struct soap *soap, float &usage);
    
    /** Web service synchronous operation 'soap_call_ns__get_memory_info' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__get_memory_info(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string &info);
    /** Web service asynchronous operation 'soap_send_ns__get_memory_info' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns__get_memory_info(struct soap *soap, const char *soap_endpoint, const char *soap_action);
    /** Web service asynchronous operation 'soap_recv_ns__get_memory_info' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns__get_memory_info(struct soap *soap, std::string &info);
    
    /** Web service synchronous operation 'soap_call_ns__get_memory_available' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__get_memory_available(struct soap *soap, const char *soap_endpoint, const char *soap_action, float &available);
    /** Web service asynchronous operation 'soap_send_ns__get_memory_available' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns__get_memory_available(struct soap *soap, const char *soap_endpoint, const char *soap_action);
    /** Web service asynchronous operation 'soap_recv_ns__get_memory_available' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns__get_memory_available(struct soap *soap, float &available);
    
    /** Web service synchronous operation 'soap_call_ns__get_memory_free' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__get_memory_free(struct soap *soap, const char *soap_endpoint, const char *soap_action, float &free);
    /** Web service asynchronous operation 'soap_send_ns__get_memory_free' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns__get_memory_free(struct soap *soap, const char *soap_endpoint, const char *soap_action);
    /** Web service asynchronous operation 'soap_recv_ns__get_memory_free' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns__get_memory_free(struct soap *soap, float &free);
    
    /** Web service synchronous operation 'soap_call_ns__get_drive_number' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__get_drive_number(struct soap *soap, const char *soap_endpoint, const char *soap_action, unsigned int &number);
    /** Web service asynchronous operation 'soap_send_ns__get_drive_number' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns__get_drive_number(struct soap *soap, const char *soap_endpoint, const char *soap_action);
    /** Web service asynchronous operation 'soap_recv_ns__get_drive_number' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns__get_drive_number(struct soap *soap, unsigned int &number);
    
    /** Web service synchronous operation 'soap_call_ns__get_drive_names' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__get_drive_names(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string *names);
    /** Web service asynchronous operation 'soap_send_ns__get_drive_names' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns__get_drive_names(struct soap *soap, const char *soap_endpoint, const char *soap_action);
    /** Web service asynchronous operation 'soap_recv_ns__get_drive_names' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns__get_drive_names(struct soap *soap, std::string *names);
    
    /** Web service synchronous operation 'soap_call_ns__get_drive_info' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__get_drive_info(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::string& name, std::string &info);
    /** Web service asynchronous operation 'soap_send_ns__get_drive_info' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns__get_drive_info(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::string& name);
    /** Web service asynchronous operation 'soap_recv_ns__get_drive_info' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns__get_drive_info(struct soap *soap, std::string &info);
    
    /** Web service synchronous operation 'soap_call_ns__get_drive_total_capacity' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__get_drive_total_capacity(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::string& name, float &total);
    /** Web service asynchronous operation 'soap_send_ns__get_drive_total_capacity' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns__get_drive_total_capacity(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::string& name);
    /** Web service asynchronous operation 'soap_recv_ns__get_drive_total_capacity' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns__get_drive_total_capacity(struct soap *soap, float &total);
    
    /** Web service synchronous operation 'soap_call_ns__get_drive_used_capatity' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__get_drive_used_capatity(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::string& name, float &usage);
    /** Web service asynchronous operation 'soap_send_ns__get_drive_used_capatity' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns__get_drive_used_capatity(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::string& name);
    /** Web service asynchronous operation 'soap_recv_ns__get_drive_used_capatity' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns__get_drive_used_capatity(struct soap *soap, float &usage);
    
    /** Web service synchronous operation 'soap_call_ns__get_interface_number' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__get_interface_number(struct soap *soap, const char *soap_endpoint, const char *soap_action, unsigned int &number);
    /** Web service asynchronous operation 'soap_send_ns__get_interface_number' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns__get_interface_number(struct soap *soap, const char *soap_endpoint, const char *soap_action);
    /** Web service asynchronous operation 'soap_recv_ns__get_interface_number' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns__get_interface_number(struct soap *soap, unsigned int &number);
    
    /** Web service synchronous operation 'soap_call_ns__get_interface_names' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__get_interface_names(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string *names);
    /** Web service asynchronous operation 'soap_send_ns__get_interface_names' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns__get_interface_names(struct soap *soap, const char *soap_endpoint, const char *soap_action);
    /** Web service asynchronous operation 'soap_recv_ns__get_interface_names' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns__get_interface_names(struct soap *soap, std::string *names);
    
    /** Web service synchronous operation 'soap_call_ns__get_interface_info' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__get_interface_info(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::string& name, std::string &info);
    /** Web service asynchronous operation 'soap_send_ns__get_interface_info' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns__get_interface_info(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::string& name);
    /** Web service asynchronous operation 'soap_recv_ns__get_interface_info' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns__get_interface_info(struct soap *soap, std::string &info);
    
    /** Web service synchronous operation 'soap_call_ns__get_interface_ip_address' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__get_interface_ip_address(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::string& name, std::string &ip_address);
    /** Web service asynchronous operation 'soap_send_ns__get_interface_ip_address' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns__get_interface_ip_address(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::string& name);
    /** Web service asynchronous operation 'soap_recv_ns__get_interface_ip_address' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns__get_interface_ip_address(struct soap *soap, std::string &ip_address);
    
    /** Web service synchronous operation 'soap_call_ns__get_interface_speed' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__get_interface_speed(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::string& name, int &speed);
    /** Web service asynchronous operation 'soap_send_ns__get_interface_speed' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns__get_interface_speed(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::string& name);
    /** Web service asynchronous operation 'soap_recv_ns__get_interface_speed' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns__get_interface_speed(struct soap *soap, int &speed);
    /** Web service one-way asynchronous operation 'soap_send_ns__set_hostname' */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns__set_hostname(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::string& hostname);
    /** Web service one-way asynchronous operation 'soap_recv_ns__set_hostname' */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns__set_hostname(struct soap *soap, struct ns__set_hostname *_param_1);
    /** Web service one-way asynchronous operation 'soap_send_ns__set_interface_ip_address' */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns__set_interface_ip_address(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::string& name, const std::string& ip_address, const std::string& subnet_mask);
    /** Web service one-way asynchronous operation 'soap_recv_ns__set_interface_ip_address' */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns__set_interface_ip_address(struct soap *soap, struct ns__set_interface_ip_address *_param_1);

/******************************************************************************\
 *                                                                            *
 * Server-Side Operations                                                     *
 *                                                                            *
\******************************************************************************/

    /** Web service operation 'ns__get_cpu_info' implementation, should return SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 ns__get_cpu_info(struct soap*, std::string &info);
    /** Web service operation 'ns__get_cpu_usage' implementation, should return SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 ns__get_cpu_usage(struct soap*, float &usage);
    /** Web service operation 'ns__get_memory_info' implementation, should return SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 ns__get_memory_info(struct soap*, std::string &info);
    /** Web service operation 'ns__get_memory_available' implementation, should return SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 ns__get_memory_available(struct soap*, float &available);
    /** Web service operation 'ns__get_memory_free' implementation, should return SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 ns__get_memory_free(struct soap*, float &free);
    /** Web service operation 'ns__get_drive_number' implementation, should return SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 ns__get_drive_number(struct soap*, unsigned int &number);
    /** Web service operation 'ns__get_drive_names' implementation, should return SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 ns__get_drive_names(struct soap*, std::string *names);
    /** Web service operation 'ns__get_drive_info' implementation, should return SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 ns__get_drive_info(struct soap*, std::string name, std::string &info);
    /** Web service operation 'ns__get_drive_total_capacity' implementation, should return SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 ns__get_drive_total_capacity(struct soap*, std::string name, float &total);
    /** Web service operation 'ns__get_drive_used_capatity' implementation, should return SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 ns__get_drive_used_capatity(struct soap*, std::string name, float &usage);
    /** Web service operation 'ns__get_interface_number' implementation, should return SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 ns__get_interface_number(struct soap*, unsigned int &number);
    /** Web service operation 'ns__get_interface_names' implementation, should return SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 ns__get_interface_names(struct soap*, std::string *names);
    /** Web service operation 'ns__get_interface_info' implementation, should return SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 ns__get_interface_info(struct soap*, std::string name, std::string &info);
    /** Web service operation 'ns__get_interface_ip_address' implementation, should return SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 ns__get_interface_ip_address(struct soap*, std::string name, std::string &ip_address);
    /** Web service operation 'ns__get_interface_speed' implementation, should return SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 ns__get_interface_speed(struct soap*, std::string name, int &speed);
    /** Web service one-way operation 'ns__set_hostname' implementation, should return value of soap_send_empty_response() to send HTTP Accept acknowledgment, or return an error code, or return SOAP_OK to immediately return without sending an HTTP response message */
    SOAP_FMAC5 int SOAP_FMAC6 ns__set_hostname(struct soap*, std::string hostname);
    /** Web service one-way operation 'ns__set_interface_ip_address' implementation, should return value of soap_send_empty_response() to send HTTP Accept acknowledgment, or return an error code, or return SOAP_OK to immediately return without sending an HTTP response message */
    SOAP_FMAC5 int SOAP_FMAC6 ns__set_interface_ip_address(struct soap*, std::string name, std::string ip_address, std::string subnet_mask);

/******************************************************************************\
 *                                                                            *
 * Server-Side Skeletons to Invoke Service Operations                         *
 *                                                                            *
\******************************************************************************/

extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__get_cpu_info(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__get_cpu_usage(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__get_memory_info(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__get_memory_available(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__get_memory_free(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__get_drive_number(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__get_drive_names(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__get_drive_info(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__get_drive_total_capacity(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__get_drive_used_capatity(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__get_interface_number(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__get_interface_names(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__get_interface_info(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__get_interface_ip_address(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__get_interface_speed(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__set_hostname(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__set_interface_ip_address(struct soap*);

#endif

/* End of soapStub.h */
