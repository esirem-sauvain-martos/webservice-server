/* soapServer.cpp
   Generated by gSOAP 2.8.98 for networkManagement.hpp

gSOAP XML Web services tools
Copyright (C) 2000-2020, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapServer.cpp ver 2.8.98 2020-03-21 19:15:26 GMT")
extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap *soap)
{
#ifndef WITH_FASTCGI
	soap->keep_alive = soap->max_keep_alive + 1;
#endif
	do
	{
#ifndef WITH_FASTCGI
		if (soap->keep_alive > 0 && soap->max_keep_alive > 0)
			soap->keep_alive--;
#endif
		if (soap_begin_serve(soap))
		{	if (soap->error >= SOAP_STOP)
				continue;
			return soap->error;
		}
		if ((soap_serve_request(soap) || (soap->fserveloop && soap->fserveloop(soap))) && soap->error && soap->error < SOAP_STOP)
		{
#ifdef WITH_FASTCGI
			soap_send_fault(soap);
#else
			return soap_send_fault(soap);
#endif
		}
#ifdef WITH_FASTCGI
		soap_destroy(soap);
		soap_end(soap);
	} while (1);
#else
	} while (soap->keep_alive);
#endif
	return SOAP_OK;
}

#ifndef WITH_NOSERVEREQUEST
extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap *soap)
{
	(void)soap_peek_element(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:get-cpu-info"))
		return soap_serve_ns__get_cpu_info(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:get-cpu-usage"))
		return soap_serve_ns__get_cpu_usage(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:get-memory-info"))
		return soap_serve_ns__get_memory_info(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:get-memory-available"))
		return soap_serve_ns__get_memory_available(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:get-memory-free"))
		return soap_serve_ns__get_memory_free(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:get-drive-number"))
		return soap_serve_ns__get_drive_number(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:get-drive-names"))
		return soap_serve_ns__get_drive_names(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:get-drive-info"))
		return soap_serve_ns__get_drive_info(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:get-drive-total-capacity"))
		return soap_serve_ns__get_drive_total_capacity(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:get-drive-used-capatity"))
		return soap_serve_ns__get_drive_used_capatity(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:get-interface-number"))
		return soap_serve_ns__get_interface_number(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:get-interface-names"))
		return soap_serve_ns__get_interface_names(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:get-interface-info"))
		return soap_serve_ns__get_interface_info(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:get-interface-ip-address"))
		return soap_serve_ns__get_interface_ip_address(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:get-interface-speed"))
		return soap_serve_ns__get_interface_speed(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:set-hostname"))
		return soap_serve_ns__set_hostname(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:set-interface-ip-address"))
		return soap_serve_ns__set_interface_ip_address(soap);
	return soap->error = SOAP_NO_METHOD;
}
#endif

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__get_cpu_info(struct soap *soap)
{	struct ns__get_cpu_info soap_tmp_ns__get_cpu_info;
	struct ns__get_cpu_infoResponse soap_tmp_ns__get_cpu_infoResponse;
	soap_default_ns__get_cpu_infoResponse(soap, &soap_tmp_ns__get_cpu_infoResponse);
	soap_default_ns__get_cpu_info(soap, &soap_tmp_ns__get_cpu_info);
	if (!soap_get_ns__get_cpu_info(soap, &soap_tmp_ns__get_cpu_info, "ns:get-cpu-info", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__get_cpu_info(soap, soap_tmp_ns__get_cpu_infoResponse.info);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize_ns__get_cpu_infoResponse(soap, &soap_tmp_ns__get_cpu_infoResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__get_cpu_infoResponse(soap, &soap_tmp_ns__get_cpu_infoResponse, "ns:get-cpu-infoResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__get_cpu_infoResponse(soap, &soap_tmp_ns__get_cpu_infoResponse, "ns:get-cpu-infoResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__get_cpu_usage(struct soap *soap)
{	struct ns__get_cpu_usage soap_tmp_ns__get_cpu_usage;
	struct ns__get_cpu_usageResponse soap_tmp_ns__get_cpu_usageResponse;
	soap_default_ns__get_cpu_usageResponse(soap, &soap_tmp_ns__get_cpu_usageResponse);
	soap_default_ns__get_cpu_usage(soap, &soap_tmp_ns__get_cpu_usage);
	if (!soap_get_ns__get_cpu_usage(soap, &soap_tmp_ns__get_cpu_usage, "ns:get-cpu-usage", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__get_cpu_usage(soap, soap_tmp_ns__get_cpu_usageResponse.usage);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize_ns__get_cpu_usageResponse(soap, &soap_tmp_ns__get_cpu_usageResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__get_cpu_usageResponse(soap, &soap_tmp_ns__get_cpu_usageResponse, "ns:get-cpu-usageResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__get_cpu_usageResponse(soap, &soap_tmp_ns__get_cpu_usageResponse, "ns:get-cpu-usageResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__get_memory_info(struct soap *soap)
{	struct ns__get_memory_info soap_tmp_ns__get_memory_info;
	struct ns__get_memory_infoResponse soap_tmp_ns__get_memory_infoResponse;
	soap_default_ns__get_memory_infoResponse(soap, &soap_tmp_ns__get_memory_infoResponse);
	soap_default_ns__get_memory_info(soap, &soap_tmp_ns__get_memory_info);
	if (!soap_get_ns__get_memory_info(soap, &soap_tmp_ns__get_memory_info, "ns:get-memory-info", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__get_memory_info(soap, soap_tmp_ns__get_memory_infoResponse.info);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize_ns__get_memory_infoResponse(soap, &soap_tmp_ns__get_memory_infoResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__get_memory_infoResponse(soap, &soap_tmp_ns__get_memory_infoResponse, "ns:get-memory-infoResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__get_memory_infoResponse(soap, &soap_tmp_ns__get_memory_infoResponse, "ns:get-memory-infoResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__get_memory_available(struct soap *soap)
{	struct ns__get_memory_available soap_tmp_ns__get_memory_available;
	struct ns__get_memory_availableResponse soap_tmp_ns__get_memory_availableResponse;
	soap_default_ns__get_memory_availableResponse(soap, &soap_tmp_ns__get_memory_availableResponse);
	soap_default_ns__get_memory_available(soap, &soap_tmp_ns__get_memory_available);
	if (!soap_get_ns__get_memory_available(soap, &soap_tmp_ns__get_memory_available, "ns:get-memory-available", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__get_memory_available(soap, soap_tmp_ns__get_memory_availableResponse.available);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize_ns__get_memory_availableResponse(soap, &soap_tmp_ns__get_memory_availableResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__get_memory_availableResponse(soap, &soap_tmp_ns__get_memory_availableResponse, "ns:get-memory-availableResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__get_memory_availableResponse(soap, &soap_tmp_ns__get_memory_availableResponse, "ns:get-memory-availableResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__get_memory_free(struct soap *soap)
{	struct ns__get_memory_free soap_tmp_ns__get_memory_free;
	struct ns__get_memory_freeResponse soap_tmp_ns__get_memory_freeResponse;
	soap_default_ns__get_memory_freeResponse(soap, &soap_tmp_ns__get_memory_freeResponse);
	soap_default_ns__get_memory_free(soap, &soap_tmp_ns__get_memory_free);
	if (!soap_get_ns__get_memory_free(soap, &soap_tmp_ns__get_memory_free, "ns:get-memory-free", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__get_memory_free(soap, soap_tmp_ns__get_memory_freeResponse.free);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize_ns__get_memory_freeResponse(soap, &soap_tmp_ns__get_memory_freeResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__get_memory_freeResponse(soap, &soap_tmp_ns__get_memory_freeResponse, "ns:get-memory-freeResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__get_memory_freeResponse(soap, &soap_tmp_ns__get_memory_freeResponse, "ns:get-memory-freeResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__get_drive_number(struct soap *soap)
{	struct ns__get_drive_number soap_tmp_ns__get_drive_number;
	struct ns__get_drive_numberResponse soap_tmp_ns__get_drive_numberResponse;
	soap_default_ns__get_drive_numberResponse(soap, &soap_tmp_ns__get_drive_numberResponse);
	soap_default_ns__get_drive_number(soap, &soap_tmp_ns__get_drive_number);
	if (!soap_get_ns__get_drive_number(soap, &soap_tmp_ns__get_drive_number, "ns:get-drive-number", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__get_drive_number(soap, soap_tmp_ns__get_drive_numberResponse.number);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize_ns__get_drive_numberResponse(soap, &soap_tmp_ns__get_drive_numberResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__get_drive_numberResponse(soap, &soap_tmp_ns__get_drive_numberResponse, "ns:get-drive-numberResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__get_drive_numberResponse(soap, &soap_tmp_ns__get_drive_numberResponse, "ns:get-drive-numberResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__get_drive_names(struct soap *soap)
{	struct ns__get_drive_names soap_tmp_ns__get_drive_names;
	struct ns__get_drive_namesResponse soap_tmp_ns__get_drive_namesResponse;
	std::string soap_tmp_std__string;
	soap_default_ns__get_drive_namesResponse(soap, &soap_tmp_ns__get_drive_namesResponse);
	soap_default_std__string(soap, &soap_tmp_std__string);
	soap_tmp_ns__get_drive_namesResponse.names = &soap_tmp_std__string;
	soap_default_ns__get_drive_names(soap, &soap_tmp_ns__get_drive_names);
	if (!soap_get_ns__get_drive_names(soap, &soap_tmp_ns__get_drive_names, "ns:get-drive-names", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__get_drive_names(soap, soap_tmp_ns__get_drive_namesResponse.names);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize_ns__get_drive_namesResponse(soap, &soap_tmp_ns__get_drive_namesResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__get_drive_namesResponse(soap, &soap_tmp_ns__get_drive_namesResponse, "ns:get-drive-namesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__get_drive_namesResponse(soap, &soap_tmp_ns__get_drive_namesResponse, "ns:get-drive-namesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__get_drive_info(struct soap *soap)
{	struct ns__get_drive_info soap_tmp_ns__get_drive_info;
	struct ns__get_drive_infoResponse soap_tmp_ns__get_drive_infoResponse;
	soap_default_ns__get_drive_infoResponse(soap, &soap_tmp_ns__get_drive_infoResponse);
	soap_default_ns__get_drive_info(soap, &soap_tmp_ns__get_drive_info);
	if (!soap_get_ns__get_drive_info(soap, &soap_tmp_ns__get_drive_info, "ns:get-drive-info", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__get_drive_info(soap, soap_tmp_ns__get_drive_info.name, soap_tmp_ns__get_drive_infoResponse.info);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize_ns__get_drive_infoResponse(soap, &soap_tmp_ns__get_drive_infoResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__get_drive_infoResponse(soap, &soap_tmp_ns__get_drive_infoResponse, "ns:get-drive-infoResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__get_drive_infoResponse(soap, &soap_tmp_ns__get_drive_infoResponse, "ns:get-drive-infoResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__get_drive_total_capacity(struct soap *soap)
{	struct ns__get_drive_total_capacity soap_tmp_ns__get_drive_total_capacity;
	struct ns__get_drive_total_capacityResponse soap_tmp_ns__get_drive_total_capacityResponse;
	soap_default_ns__get_drive_total_capacityResponse(soap, &soap_tmp_ns__get_drive_total_capacityResponse);
	soap_default_ns__get_drive_total_capacity(soap, &soap_tmp_ns__get_drive_total_capacity);
	if (!soap_get_ns__get_drive_total_capacity(soap, &soap_tmp_ns__get_drive_total_capacity, "ns:get-drive-total-capacity", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__get_drive_total_capacity(soap, soap_tmp_ns__get_drive_total_capacity.name, soap_tmp_ns__get_drive_total_capacityResponse.total);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize_ns__get_drive_total_capacityResponse(soap, &soap_tmp_ns__get_drive_total_capacityResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__get_drive_total_capacityResponse(soap, &soap_tmp_ns__get_drive_total_capacityResponse, "ns:get-drive-total-capacityResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__get_drive_total_capacityResponse(soap, &soap_tmp_ns__get_drive_total_capacityResponse, "ns:get-drive-total-capacityResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__get_drive_used_capatity(struct soap *soap)
{	struct ns__get_drive_used_capatity soap_tmp_ns__get_drive_used_capatity;
	struct ns__get_drive_used_capatityResponse soap_tmp_ns__get_drive_used_capatityResponse;
	soap_default_ns__get_drive_used_capatityResponse(soap, &soap_tmp_ns__get_drive_used_capatityResponse);
	soap_default_ns__get_drive_used_capatity(soap, &soap_tmp_ns__get_drive_used_capatity);
	if (!soap_get_ns__get_drive_used_capatity(soap, &soap_tmp_ns__get_drive_used_capatity, "ns:get-drive-used-capatity", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__get_drive_used_capatity(soap, soap_tmp_ns__get_drive_used_capatity.name, soap_tmp_ns__get_drive_used_capatityResponse.usage);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize_ns__get_drive_used_capatityResponse(soap, &soap_tmp_ns__get_drive_used_capatityResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__get_drive_used_capatityResponse(soap, &soap_tmp_ns__get_drive_used_capatityResponse, "ns:get-drive-used-capatityResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__get_drive_used_capatityResponse(soap, &soap_tmp_ns__get_drive_used_capatityResponse, "ns:get-drive-used-capatityResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__get_interface_number(struct soap *soap)
{	struct ns__get_interface_number soap_tmp_ns__get_interface_number;
	struct ns__get_interface_numberResponse soap_tmp_ns__get_interface_numberResponse;
	soap_default_ns__get_interface_numberResponse(soap, &soap_tmp_ns__get_interface_numberResponse);
	soap_default_ns__get_interface_number(soap, &soap_tmp_ns__get_interface_number);
	if (!soap_get_ns__get_interface_number(soap, &soap_tmp_ns__get_interface_number, "ns:get-interface-number", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__get_interface_number(soap, soap_tmp_ns__get_interface_numberResponse.number);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize_ns__get_interface_numberResponse(soap, &soap_tmp_ns__get_interface_numberResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__get_interface_numberResponse(soap, &soap_tmp_ns__get_interface_numberResponse, "ns:get-interface-numberResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__get_interface_numberResponse(soap, &soap_tmp_ns__get_interface_numberResponse, "ns:get-interface-numberResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__get_interface_names(struct soap *soap)
{	struct ns__get_interface_names soap_tmp_ns__get_interface_names;
	struct ns__get_interface_namesResponse soap_tmp_ns__get_interface_namesResponse;
	std::string soap_tmp_std__string;
	soap_default_ns__get_interface_namesResponse(soap, &soap_tmp_ns__get_interface_namesResponse);
	soap_default_std__string(soap, &soap_tmp_std__string);
	soap_tmp_ns__get_interface_namesResponse.names = &soap_tmp_std__string;
	soap_default_ns__get_interface_names(soap, &soap_tmp_ns__get_interface_names);
	if (!soap_get_ns__get_interface_names(soap, &soap_tmp_ns__get_interface_names, "ns:get-interface-names", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__get_interface_names(soap, soap_tmp_ns__get_interface_namesResponse.names);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize_ns__get_interface_namesResponse(soap, &soap_tmp_ns__get_interface_namesResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__get_interface_namesResponse(soap, &soap_tmp_ns__get_interface_namesResponse, "ns:get-interface-namesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__get_interface_namesResponse(soap, &soap_tmp_ns__get_interface_namesResponse, "ns:get-interface-namesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__get_interface_info(struct soap *soap)
{	struct ns__get_interface_info soap_tmp_ns__get_interface_info;
	struct ns__get_interface_infoResponse soap_tmp_ns__get_interface_infoResponse;
	soap_default_ns__get_interface_infoResponse(soap, &soap_tmp_ns__get_interface_infoResponse);
	soap_default_ns__get_interface_info(soap, &soap_tmp_ns__get_interface_info);
	if (!soap_get_ns__get_interface_info(soap, &soap_tmp_ns__get_interface_info, "ns:get-interface-info", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__get_interface_info(soap, soap_tmp_ns__get_interface_info.name, soap_tmp_ns__get_interface_infoResponse.info);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize_ns__get_interface_infoResponse(soap, &soap_tmp_ns__get_interface_infoResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__get_interface_infoResponse(soap, &soap_tmp_ns__get_interface_infoResponse, "ns:get-interface-infoResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__get_interface_infoResponse(soap, &soap_tmp_ns__get_interface_infoResponse, "ns:get-interface-infoResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__get_interface_ip_address(struct soap *soap)
{	struct ns__get_interface_ip_address soap_tmp_ns__get_interface_ip_address;
	struct ns__get_interface_ip_addressResponse soap_tmp_ns__get_interface_ip_addressResponse;
	soap_default_ns__get_interface_ip_addressResponse(soap, &soap_tmp_ns__get_interface_ip_addressResponse);
	soap_default_ns__get_interface_ip_address(soap, &soap_tmp_ns__get_interface_ip_address);
	if (!soap_get_ns__get_interface_ip_address(soap, &soap_tmp_ns__get_interface_ip_address, "ns:get-interface-ip-address", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__get_interface_ip_address(soap, soap_tmp_ns__get_interface_ip_address.name, soap_tmp_ns__get_interface_ip_addressResponse.ip_address);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize_ns__get_interface_ip_addressResponse(soap, &soap_tmp_ns__get_interface_ip_addressResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__get_interface_ip_addressResponse(soap, &soap_tmp_ns__get_interface_ip_addressResponse, "ns:get-interface-ip-addressResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__get_interface_ip_addressResponse(soap, &soap_tmp_ns__get_interface_ip_addressResponse, "ns:get-interface-ip-addressResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__get_interface_speed(struct soap *soap)
{	struct ns__get_interface_speed soap_tmp_ns__get_interface_speed;
	struct ns__get_interface_speedResponse soap_tmp_ns__get_interface_speedResponse;
	soap_default_ns__get_interface_speedResponse(soap, &soap_tmp_ns__get_interface_speedResponse);
	soap_default_ns__get_interface_speed(soap, &soap_tmp_ns__get_interface_speed);
	if (!soap_get_ns__get_interface_speed(soap, &soap_tmp_ns__get_interface_speed, "ns:get-interface-speed", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__get_interface_speed(soap, soap_tmp_ns__get_interface_speed.name, soap_tmp_ns__get_interface_speedResponse.speed);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize_ns__get_interface_speedResponse(soap, &soap_tmp_ns__get_interface_speedResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__get_interface_speedResponse(soap, &soap_tmp_ns__get_interface_speedResponse, "ns:get-interface-speedResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__get_interface_speedResponse(soap, &soap_tmp_ns__get_interface_speedResponse, "ns:get-interface-speedResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__set_hostname(struct soap *soap)
{	struct ns__set_hostname soap_tmp_ns__set_hostname;
	soap_default_ns__set_hostname(soap, &soap_tmp_ns__set_hostname);
	if (!soap_get_ns__set_hostname(soap, &soap_tmp_ns__set_hostname, "ns:set-hostname", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__set_hostname(soap, soap_tmp_ns__set_hostname.hostname);
	if (soap->error)
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__set_interface_ip_address(struct soap *soap)
{	struct ns__set_interface_ip_address soap_tmp_ns__set_interface_ip_address;
	soap_default_ns__set_interface_ip_address(soap, &soap_tmp_ns__set_interface_ip_address);
	if (!soap_get_ns__set_interface_ip_address(soap, &soap_tmp_ns__set_interface_ip_address, "ns:set-interface-ip-address", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__set_interface_ip_address(soap, soap_tmp_ns__set_interface_ip_address.name, soap_tmp_ns__set_interface_ip_address.ip_address, soap_tmp_ns__set_interface_ip_address.subnet_mask);
	if (soap->error)
		return soap->error;
	return soap_closesock(soap);
}

#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of soapServer.cpp */
